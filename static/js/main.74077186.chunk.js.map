{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h5/pages/Error.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routers.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","h","nav","navData","isActive","active","to","Message","props","message","wrapper","src","avatar","alt","name","time","messageData","HW1","Affair","colors","af","level","affair","priority","global","onClick","deleteAffairCallback","_id","Affairs","useState","cls","setCls","mappedAffairs","data","map","a","st1","fs","buttons","st2","st3","st4","someClass","tasks","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","d","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","activeError","inputClass","s","changeName","e","value","onChange","onBlur","red","GreetingContainer","users","addUserCallback","setName","errorMessage","setActiveError","console","log","length","target","alert","trim","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","currentTarget","key","SuperButton","finalClassName","default","disabled","dis","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","onDoubleClickCallBack","xmlns","width","height","fill","viewBox","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","save","undefined","PreJunior","Error404","codeError","notFound","simb","SuperSelect","options","onChangeOption","SuperRadio","mappedOptions","o","i","arr","HW7","Junior","PATH","Routers","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.74077186.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2JIxC\",\"tasks\":\"Affairs_tasks__3_lo2\",\"buttons\":\"Affairs_buttons__3ZOXT\",\"active\":\"Affairs_active__1Jmrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1guE2\",\"active\":\"Header_active__2WCrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__-Di50\",\"message\":\"Message_message__3QJBX\",\"name\":\"Message_name__24uRR\",\"time\":\"Message_time__q6YP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"Affair_global__1qwVn\",\"affair\":\"Affair_affair__22sie\",\"low\":\"Affair_low__2UKd1\",\"high\":\"Affair_high__1Jkbi\",\"middle\":\"Affair_middle__1gr8d\",\"level\":\"Affair_level__3qePU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2itOJ\",\"codeError\":\"Error_codeError__3PxDK\",\"notFound\":\"Error_notFound__xwwmi\",\"simb\":\"Error_simb__RkP_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__37cIc\",\"error\":\"Greeting_error__1GdWw\",\"red\":\"Greeting_red__3zPC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2-6Bo\",\"errorInput\":\"SuperInputText_errorInput__1daLp\",\"error\":\"SuperInputText_error__PWXCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__4SD24\",\"column\":\"HW4_column__3v-Se\",\"testSpanError\":\"HW4_testSpanError__3eqWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3cLED\",\"red\":\"SuperButton_red__33JbI\",\"dis\":\"SuperButton_dis__3A8Mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3C77e\",\"spanClassName\":\"SuperCheckbox_spanClassName__2wC3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Mcf-c\"};","import React from 'react'\nimport {Link, NavLink} from 'react-router-dom'\nimport h from './Header.module.css'\n\nfunction Header() {\n    // @ts-ignore\n    const linkStyle = ({isActive}) => {\n        return {\n            color: isActive ? `#159357` : ''\n        }\n    }\n\n    // @ts-ignore\n    return (\n        <div>\n            <nav className={h.nav}>\n                <NavLink className={(navData) => (navData.isActive ? h.active : '')}\n                         to={'/pre-junior'}>Pre-Junior</NavLink>\n                <NavLink className={(navData) => (navData.isActive ? h.active : '')} to={'/junior'}>Junior</NavLink>\n                <NavLink className={(navData) => (navData.isActive ? h.active : '')}\n                         to={'/junior-plus'}>Junior+</NavLink>\n            </nav>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport message from './Message.module.css'\n\ntype MessageType={\n    avatar:string\n    name:string\n    message:string\n    time:string\n}\n\nfunction Message(props:MessageType) {\n    return (\n        <div>\n            <div className={message.wrapper}>\n                <img src={props.avatar} alt=\"\"/>\n                <div className={message.message}>\n                    <h5 className={message.name}>{props.name}</h5>\n                    <p>{props.message} </p>\n                    <p className={message.time}>{props.time}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://s2.cdn.teleprogramma.pro/wp-content/uploads/2019/05/cb706541804dc13167fa181910dc3387.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport af from './Affair.module.css'\n\ntype InAffairType = {_id: number,name: string,priority: string }\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: InAffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\ntype callBack={\n    callBack:(id:number)=>void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (callBack: callBack) => callBack\n    const colors=af.level+' '+af[props.affair.priority]\n    return (\n            <div className={af.global}>\n                    <div>{props.affair.name}</div>\n                    <div className={af.affair}>\n                        <div className={colors}>{props.affair.priority}</div>\n                        <button onClick={() => deleteCallback(props.deleteAffairCallback(props.affair._id))}>X</button>\n                    </div>\n            </div>\n        )\n    // need to fix\n    // return (\n    //     // <div className={af.global}>\n    //     //     <div className={af.affair}>\n    //     //         {someText}\n    //     //     </div>\n    //     //\n    //     // </div>\n    // )\n}\n\nexport default Affair\n","import React, {useState} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport fs from './Affairs.module.css'\ntype InAffairType = {_id: number,name: string,priority: string }\n\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType\n    setFilter: (f: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\n\nfunction Affairs(props: AffairsPropsType) {\n    const [cls,setCls]=useState('all');\n    const mappedAffairs = props.data.map((a: InAffairType) => (\n            <Affair // should work\n                key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n                affair={a}\n                deleteAffairCallback={props.deleteAffairCallback}\n            />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n        setCls('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n        setCls('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n        setCls('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n        setCls('low')\n    }\n    let st1=fs.buttons+' '+(cls==='all'?fs.active:'')\n    let st2=fs.buttons+' '+(cls==='high'?fs.active:'')\n    let st3=fs.buttons+' '+(cls==='middle'?fs.active:'')\n    let st4=fs.buttons+' '+(cls==='low'?fs.active:'')\n    return (\n        <div className={fs.someClass}>\n            <div className={fs.tasks}>\n                {mappedAffairs}\n            </div>\n\n            <div className={fs.buttons}>\n                <button className={st1} onClick={setAll}>All</button>\n                <button className={st2} onClick={setHigh}>High</button>\n                <button className={st3} onClick={setMiddle}>Middle</button>\n                <button className={st4} onClick={setLow}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\n\nimport Affairs from \"./Affairs\";\n\n\n// types\n\nexport type AffairPriorityType ='low' | 'middle' | 'high' // need to fix any\ntype InArray={\n    _id:number\n    name:string\n    priority:AffairPriorityType\n}\nexport type AffairType = Array<InArray>\n // need to fix any\nexport type FilterType = \"all\"|AffairPriorityType\n\n// constants\nconst defaultAffairs:AffairType = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType, filter: FilterType): AffairType => { // need to fix any\n    if (filter === 'all') {\n        return affairs\n    }\n    if (filter === 'low') {\n        return affairs.filter(a => a.priority === 'low')\n    }\n    if (filter === 'middle') {\n        return affairs.filter(a => a.priority === 'middle')\n    }\n    else if (filter === 'high') {\n        return affairs.filter(a => a.priority === 'high')\n    }\n\n}\nexport const deleteAffair = (affairs: AffairType, _id: number) => { // need to fix any\n    return affairs.filter((d) => d._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    activeError:boolean\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback,addUser, error, totalUsers,activeError} // деструктуризация пропсов\n) => {\n    // const inputClass = name == '' ? s.error : ''; // need to fix with (?:)\n    const inputClass = activeError ===true? s.error : ''; // need to fix with (?:)\n    const changeName = (e: ChangeEvent<HTMLInputElement>) => {\n            setNameCallback(e)\n    }\n    return (\n        <div>\n            <div className={s.someClass}>\n                <input value={name} onChange={changeName} onBlur={changeName} className={inputClass}/>\n                <button onClick={addUser}>add</button>\n                <span>{totalUsers ? totalUsers : 0}</span>\n            </div>\n            <div>\n                {name === '' ? <div>\n                    <span className={s.red}>{activeError?error:''}</span>\n                </div> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [errorMessage, setErrorMessage] = useState<string>('Вы не ввели имя') // need to fix any\n    const [activeError, setActiveError]=useState(false)\n    console.log(users)\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        if (!e.target.value){\n            setActiveError(true)\n        }\n        else {\n            setName(e.target.value)\n            setActiveError(false)\n        }\n         // need to fix\n    }\n    const onOffSetActiveError=(active:boolean)=>{\n        setActiveError(active)\n    }\n    const addUser = () => {\n        if (name !== '') {\n            alert(`Hello ${name} !`);\n            addUserCallback(name.trim());\n            setName('')\n            console.log('Help')\n        }\n\n        // need to fix\n    }\n\n    const totalUsers = users.length// need to fix\n\n    return (\n        <div>\n            <Greeting\n                activeError={activeError}\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                error={errorMessage}\n                totalUsers={totalUsers}\n            />\n        </div>\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const newUser: UserType = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([...users, newUser]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value)\n\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.currentTarget.value){\n            onKeyPress && onKeyPress(e);\n\n            onEnter // если есть пропс onEnter\n            && e.key === 'Enter' // и если нажата кнопка Enter\n            && onEnter() // то вызвать его\n        }\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName =error?`${s.errorInput} ${className}`:s.superInput // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\nimport {log} from \"util\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            disabled={restProps.disabled}\n            className={restProps.disabled?s.dis:finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange&&onChange(e)\n        onChangeChecked&&onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('');\n    const error = text ?'':'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setChecked(e.currentTarget.checked)\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState, KeyboardEvent} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n\n    const onEnterCallback = () => {\n            setEditMode(false) // выключить editMode при нажатии Enter\n            onEnter && onEnter()\n    }\n\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <>\n\n                        <span onClick={onDoubleClickCallBack}>\n                            <svg  xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                  className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/>\n                        </svg>\n                        </span>\n                        <span\n\n                            onDoubleClick={onDoubleClickCallBack}\n                            className={spanClassName}\n\n                            {...restSpanProps}\n                        >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                            {children || restProps.value}\n                    </span>\n                    </>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {KeyboardEvent, useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n       setValue(restoreState('editable-span-value', ''))\n    }\n    const onEnter=()=>{\n        save()\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    onEnter={save}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport e from './Error.module.css'\nfunction Error404() {\n    return (\n        <div className={e.error}>\n            <div className={e.codeError}>404</div>\n            <div className={e.notFound}>Page not found!</div>\n            <div className={e.simb}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React from 'react';\r\nimport HW7 from '../../h7/HW7';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react'\nimport {Route, Navigate} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport {Routes} from 'react-router-dom';\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routers() {\n    return (\n        <div>\n\n            <Routes>\n                <Route path={'/pre-junior'} element={<PreJunior/>}/>\n                <Route path={'/junior'} element={<Junior/>}/>\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={'*'} element={<Error404/>}/>\n            </Routes>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n            {/*// add routes*/}\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routers\n","import React from 'react'\nimport Header from './Header'\nimport Routers from './Routers'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routers/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from '../../../p2-homeworks/h5/HW5';\nimport PreJunior from \"../../../p2-homeworks/h5/pages/PreJunior\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport Routers from \"../../../p2-homeworks/h5/Routers\";\nimport Header from \"../../../p2-homeworks/h5/Header\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n\n            <BrowserRouter>\n                <HW5/>\n            </BrowserRouter>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}